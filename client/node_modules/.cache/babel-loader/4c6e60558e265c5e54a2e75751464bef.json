{"ast":null,"code":"var _jsxFileName = \"/Users/dan/react-projects/expense-tracker/client/src/context/GlobalState.js\";\nimport React, { createContext, useReducer } from \"react\";\nimport axios from \"axios\";\nconst initialState = {\n  transactions: [],\n  error: null,\n  loading: true\n};\nconst GlobalContext = createContext(initialState);\n\nconst AppReducer = (state, action) => {\n  switch (action.type) {\n    case `GET_TRANSACTIONS`:\n      return { ...state,\n        loading: false,\n        transactions: action.payload\n      };\n\n    case `DELETE_TRANSACTION`:\n      return { ...state,\n        transactions: state.transactions.filter(transaction => transaction._id !== action.payload)\n      };\n\n    case `ADD_TRANSACTION`:\n      return { ...state,\n        transactions: [...state.transaction, action.payload]\n      };\n\n    case `TRANSACTIONS_ERROR`:\n      return { ...state,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst GlobalContextProvider = ({\n  children\n}) => {\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n\n  const getTransactions = async () => {\n    try {\n      const res = await axios.get(\"/api/v1/transactions\");\n      dispatch({\n        type: \"GET_TRANSACTIONS\",\n        payload: res.data.data\n      });\n    } catch (e) {\n      dispatch({\n        type: \"TRANSACTIONS_ERROR\",\n        payload: e.response.data.error\n      });\n    }\n  };\n\n  const deleteTransaction = async id => {\n    try {\n      await axios.delete(`/api/v1/transactions/${id}`);\n    } catch (e) {\n      dispatch({\n        type: \"TRANSACTIONS_ERROR\",\n        payload: e.response.data.error\n      });\n    }\n\n    dispatch({\n      type: \"DELETE_TRANSACTION\",\n      payload: id\n    });\n  };\n\n  const addTransaction = async transaction => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n\n    try {\n      const res = await axios.post(\"/api/v1/transactions\", transaction, config);\n      console.log(res.data.data);\n      dispatch({\n        type: \"ADD_TRANSACTION\",\n        payload: await res.data.data\n      });\n    } catch (e) {\n      dispatch({\n        type: \"TRANSACTIONS_ERROR\",\n        payload: e.response.data.error\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(GlobalContext.Provider, {\n    value: {\n      transactions: state.transactions,\n      getTransactions,\n      deleteTransaction,\n      addTransaction\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, children);\n};\n\nexport { GlobalContext, GlobalContextProvider };","map":{"version":3,"sources":["/Users/dan/react-projects/expense-tracker/client/src/context/GlobalState.js"],"names":["React","createContext","useReducer","axios","initialState","transactions","error","loading","GlobalContext","AppReducer","state","action","type","payload","filter","transaction","_id","GlobalContextProvider","children","dispatch","getTransactions","res","get","data","e","response","deleteTransaction","id","delete","addTransaction","config","headers","post","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,QAAiD,OAAjD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,YAAY,EAAE,EADG;AAEjBC,EAAAA,KAAK,EAAE,IAFU;AAGjBC,EAAAA,OAAO,EAAE;AAHQ,CAArB;AAMA,MAAMC,aAAa,GAAGP,aAAa,CAACG,YAAD,CAAnC;;AAEA,MAAMK,UAAU,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAClC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAM,kBAAN;AACI,aAAO,EACH,GAAGF,KADA;AAEHH,QAAAA,OAAO,EAAE,KAFN;AAGHF,QAAAA,YAAY,EAAEM,MAAM,CAACE;AAHlB,OAAP;;AAKJ,SAAM,oBAAN;AACI,aAAO,EACH,GAAGH,KADA;AAEHL,QAAAA,YAAY,EAAEK,KAAK,CAACL,YAAN,CAAmBS,MAAnB,CAA2BC,WAAD,IAAiBA,WAAW,CAACC,GAAZ,KAAoBL,MAAM,CAACE,OAAtE;AAFX,OAAP;;AAIJ,SAAM,iBAAN;AACI,aAAO,EACH,GAAGH,KADA;AAEHL,QAAAA,YAAY,EAAE,CAAC,GAAGK,KAAK,CAACK,WAAV,EAAuBJ,MAAM,CAACE,OAA9B;AAFX,OAAP;;AAIJ,SAAM,oBAAN;AACI,aAAO,EACH,GAAGH,KADA;AAEHJ,QAAAA,KAAK,EAAEK,MAAM,CAACE;AAFX,OAAP;;AAIJ;AACI,aAAOH,KAAP;AAvBR;AAyBH,CA1BD;;AA4BA,MAAMO,qBAAqB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC5C,QAAM,CAACR,KAAD,EAAQS,QAAR,IAAoBjB,UAAU,CAACO,UAAD,EAAaL,YAAb,CAApC;;AAEA,QAAMgB,eAAe,GAAG,YAAY;AAChC,QAAI;AACA,YAAMC,GAAG,GAAG,MAAMlB,KAAK,CAACmB,GAAN,CAAU,sBAAV,CAAlB;AAEAH,MAAAA,QAAQ,CAAC;AACLP,QAAAA,IAAI,EAAE,kBADD;AAELC,QAAAA,OAAO,EAAEQ,GAAG,CAACE,IAAJ,CAASA;AAFb,OAAD,CAAR;AAIH,KAPD,CAOE,OAAOC,CAAP,EAAU;AACRL,MAAAA,QAAQ,CAAC;AACLP,QAAAA,IAAI,EAAE,oBADD;AAELC,QAAAA,OAAO,EAAEW,CAAC,CAACC,QAAF,CAAWF,IAAX,CAAgBjB;AAFpB,OAAD,CAAR;AAIH;AACJ,GAdD;;AAgBA,QAAMoB,iBAAiB,GAAG,MAAOC,EAAP,IAAc;AACpC,QAAI;AACA,YAAMxB,KAAK,CAACyB,MAAN,CAAc,wBAAuBD,EAAG,EAAxC,CAAN;AACH,KAFD,CAEE,OAAOH,CAAP,EAAU;AACRL,MAAAA,QAAQ,CAAC;AACLP,QAAAA,IAAI,EAAE,oBADD;AAELC,QAAAA,OAAO,EAAEW,CAAC,CAACC,QAAF,CAAWF,IAAX,CAAgBjB;AAFpB,OAAD,CAAR;AAIH;;AACDa,IAAAA,QAAQ,CAAC;AAAEP,MAAAA,IAAI,EAAE,oBAAR;AAA8BC,MAAAA,OAAO,EAAEc;AAAvC,KAAD,CAAR;AACH,GAVD;;AAWA,QAAME,cAAc,GAAG,MAAOd,WAAP,IAAuB;AAC1C,UAAMe,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AADE,KAAf;;AAMA,QAAI;AACA,YAAMV,GAAG,GAAG,MAAMlB,KAAK,CAAC6B,IAAN,CAAW,sBAAX,EAAmCjB,WAAnC,EAAgDe,MAAhD,CAAlB;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYb,GAAG,CAACE,IAAJ,CAASA,IAArB;AACAJ,MAAAA,QAAQ,CAAC;AAAEP,QAAAA,IAAI,EAAE,iBAAR;AAA2BC,QAAAA,OAAO,EAAE,MAAMQ,GAAG,CAACE,IAAJ,CAASA;AAAnD,OAAD,CAAR;AACH,KAJD,CAIE,OAAOC,CAAP,EAAU;AACRL,MAAAA,QAAQ,CAAC;AACLP,QAAAA,IAAI,EAAE,oBADD;AAELC,QAAAA,OAAO,EAAEW,CAAC,CAACC,QAAF,CAAWF,IAAX,CAAgBjB;AAFpB,OAAD,CAAR;AAIH;AACJ,GAjBD;;AAmBA,sBACI,oBAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE;AAAED,MAAAA,YAAY,EAAEK,KAAK,CAACL,YAAtB;AAAoCe,MAAAA,eAApC;AAAqDM,MAAAA,iBAArD;AAAwEG,MAAAA;AAAxE,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKX,QADL,CADJ;AAKH,CAtDD;;AAwDA,SAASV,aAAT,EAAwBS,qBAAxB","sourcesContent":["import React, { createContext, useReducer } from \"react\";\nimport axios from \"axios\";\n\nconst initialState = {\n    transactions: [],\n    error: null,\n    loading: true,\n};\n\nconst GlobalContext = createContext(initialState);\n\nconst AppReducer = (state, action) => {\n    switch (action.type) {\n        case `GET_TRANSACTIONS`:\n            return {\n                ...state,\n                loading: false,\n                transactions: action.payload,\n            };\n        case `DELETE_TRANSACTION`:\n            return {\n                ...state,\n                transactions: state.transactions.filter((transaction) => transaction._id !== action.payload),\n            };\n        case `ADD_TRANSACTION`:\n            return {\n                ...state,\n                transactions: [...state.transaction, action.payload],\n            };\n        case `TRANSACTIONS_ERROR`:\n            return {\n                ...state,\n                error: action.payload,\n            };\n        default:\n            return state;\n    }\n};\n\nconst GlobalContextProvider = ({ children }) => {\n    const [state, dispatch] = useReducer(AppReducer, initialState);\n\n    const getTransactions = async () => {\n        try {\n            const res = await axios.get(\"/api/v1/transactions\");\n\n            dispatch({\n                type: \"GET_TRANSACTIONS\",\n                payload: res.data.data,\n            });\n        } catch (e) {\n            dispatch({\n                type: \"TRANSACTIONS_ERROR\",\n                payload: e.response.data.error,\n            });\n        }\n    };\n\n    const deleteTransaction = async (id) => {\n        try {\n            await axios.delete(`/api/v1/transactions/${id}`);\n        } catch (e) {\n            dispatch({\n                type: \"TRANSACTIONS_ERROR\",\n                payload: e.response.data.error,\n            });\n        }\n        dispatch({ type: \"DELETE_TRANSACTION\", payload: id });\n    };\n    const addTransaction = async (transaction) => {\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n        };\n\n        try {\n            const res = await axios.post(\"/api/v1/transactions\", transaction, config);\n            console.log(res.data.data);\n            dispatch({ type: \"ADD_TRANSACTION\", payload: await res.data.data });\n        } catch (e) {\n            dispatch({\n                type: \"TRANSACTIONS_ERROR\",\n                payload: e.response.data.error,\n            });\n        }\n    };\n\n    return (\n        <GlobalContext.Provider value={{ transactions: state.transactions, getTransactions, deleteTransaction, addTransaction }}>\n            {children}\n        </GlobalContext.Provider>\n    );\n};\n\nexport { GlobalContext, GlobalContextProvider };\n"]},"metadata":{},"sourceType":"module"}