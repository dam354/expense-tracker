{"ast":null,"code":"var _jsxFileName = \"/Users/dan/react-projects/expense-tracker/client/src/context/GlobalState.js\";\nimport React, { createContext, useReducer } from \"react\";\nimport axios from \"axios\";\nconst initialState = {\n  transactions: [],\n  error: null,\n  loading: true\n};\nconst GlobalContext = createContext(initialState);\n\nconst AppReducer = (state, action) => {\n  switch (action.type) {\n    case `GET_TRANSACTIONS`:\n      return { ...state,\n        loading: false,\n        transactions: action.payload\n      };\n\n    case `DELETE_TRANSACTION`:\n      return { ...state,\n        transactions: state.transactions.filter(transaction => transaction._id !== action.payload)\n      };\n\n    case `ADD_TRANSACTION`:\n      return { ...state,\n        transactions: [...state.transactions, {\n          id: state + 1,\n          text: action.payload.text,\n          amount: parseInt(action.payload.amount)\n        }]\n      };\n\n    case `TRANSACTIONS_ERROR`:\n      return { ...state,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst GlobalContextProvider = ({\n  children\n}) => {\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n\n  const getTransactions = async () => {\n    try {\n      const res = await axios.get(\"/api/v1/transactions\");\n      dispatch({\n        type: \"GET_TRANSACTIONS\",\n        payload: res.data.data\n      });\n    } catch (e) {\n      dispatch({\n        type: \"TRANSACTIONS_ERROR\",\n        payload: e.response.data.error\n      });\n    }\n  };\n\n  const deleteTransaction = async id => {\n    try {\n      await axios.delete(`/api/v1/transactions/${id}`);\n    } catch (e) {\n      dispatch({\n        type: \"TRANSACTIONS_ERROR\",\n        payload: e.response.data.error\n      });\n    }\n\n    dispatch({\n      type: \"DELETE_TRANSACTION\",\n      payload: id\n    });\n  };\n\n  const addTransaction = async (text, amount) => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"applications/json\"\n      }\n    };\n\n    try {} catch (e) {}\n\n    console.log(text, amount);\n    dispatch({\n      type: \"ADD_TRANSACTION\",\n      payload: {\n        text,\n        amount\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(GlobalContext.Provider, {\n    value: {\n      transactions: state.transactions,\n      getTransactions,\n      deleteTransaction,\n      addTransaction\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, children);\n};\n\nexport { GlobalContext, GlobalContextProvider };","map":{"version":3,"sources":["/Users/dan/react-projects/expense-tracker/client/src/context/GlobalState.js"],"names":["React","createContext","useReducer","axios","initialState","transactions","error","loading","GlobalContext","AppReducer","state","action","type","payload","filter","transaction","_id","id","text","amount","parseInt","GlobalContextProvider","children","dispatch","getTransactions","res","get","data","e","response","deleteTransaction","delete","addTransaction","config","headers","console","log"],"mappings":"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","sourcesContent":["import React, { createContext, useReducer } from \"react\";\nimport axios from \"axios\";\n\nconst initialState = {\n    transactions: [],\n    error: null,\n    loading: true,\n};\n\nconst GlobalContext = createContext(initialState);\n\nconst AppReducer = (state, action) => {\n    switch (action.type) {\n        case `GET_TRANSACTIONS`:\n            return {\n                ...state,\n                loading: false,\n                transactions: action.payload,\n            };\n        case `DELETE_TRANSACTION`:\n            return {\n                ...state,\n                transactions: state.transactions.filter((transaction) => transaction._id !== action.payload),\n            };\n        case `ADD_TRANSACTION`:\n            return {\n                ...state,\n                transactions: [\n                    ...state.transactions,\n                    {\n                        id: state + 1,\n                        text: action.payload.text,\n                        amount: parseInt(action.payload.amount),\n                    },\n                ],\n            };\n        case `TRANSACTIONS_ERROR`:\n            return {\n                ...state,\n                error: action.payload,\n            };\n        default:\n            return state;\n    }\n};\n\nconst GlobalContextProvider = ({ children }) => {\n    const [state, dispatch] = useReducer(AppReducer, initialState);\n\n    const getTransactions = async () => {\n        try {\n            const res = await axios.get(\"/api/v1/transactions\");\n\n            dispatch({\n                type: \"GET_TRANSACTIONS\",\n                payload: res.data.data,\n            });\n        } catch (e) {\n            dispatch({\n                type: \"TRANSACTIONS_ERROR\",\n                payload: e.response.data.error,\n            });\n        }\n    };\n\n    const deleteTransaction = async (id) => {\n        try {\n            await axios.delete(`/api/v1/transactions/${id}`);\n        } catch (e) {\n            dispatch({\n                type: \"TRANSACTIONS_ERROR\",\n                payload: e.response.data.error,\n            });\n        }\n        dispatch({ type: \"DELETE_TRANSACTION\", payload: id });\n    };\n    const addTransaction = async (text, amount) => {\n        const config = {\n            headers: {\n                \"Content-Type\": \"applications/json\",\n            },\n        };\n\n        try {\n        } catch (e) {}\n\n        console.log(text, amount);\n        dispatch({ type: \"ADD_TRANSACTION\", payload: { text, amount } });\n    };\n\n    return (\n        <GlobalContext.Provider value={{ transactions: state.transactions, getTransactions, deleteTransaction, addTransaction }}>\n            {children}\n        </GlobalContext.Provider>\n    );\n};\n\nexport { GlobalContext, GlobalContextProvider };\n"]},"metadata":{},"sourceType":"module"}