{"ast":null,"code":"var _jsxFileName = \"/Users/dan/react-projects/expense-tracker/src/context/GlobalState.js\";\nimport React, { createContext, useReducer } from \"react\";\nconst initialState = {\n  transactions: [{\n    id: 1,\n    text: \"flower\",\n    amount: -20\n  }, {\n    id: 2,\n    text: \"Salary\",\n    amount: 210\n  }, {\n    id: 3,\n    text: \"food\",\n    amount: 20\n  }, {\n    id: 4,\n    text: \"chair\",\n    amount: -40\n  }]\n};\nconst GlobalContext = createContext(initialState);\n\nconst AppReducer = (state, action) => {\n  switch (action.type) {\n    case `DELETE_TRANSACTION`:\n      return { ...state,\n        transactions: state.transactions.filter(transaction => transaction.id !== action.payload)\n      };\n\n    case `ADD_TRANSACTION`:\n      return { ...state,\n        transactions: [...state.transactions, {\n          id: state + 1,\n          text: action.payload.text,\n          amount: parseInt(action.payload.amount)\n        }]\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst GlobalContextProvider = ({\n  children\n}) => {\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n\n  const deleteTransaction = id => {\n    dispatch({\n      type: \"DELETE_TRANSACTION\",\n      payload: id\n    });\n  };\n\n  const addTransaction = (text, amount) => {\n    console.log(text, amount);\n    dispatch({\n      type: \"ADD_TRANSACTION\",\n      payload: {\n        text,\n        amount\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(GlobalContext.Provider, {\n    value: {\n      transactions: state.transactions,\n      deleteTransaction,\n      addTransaction\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, children);\n};\n\nexport { GlobalContext, GlobalContextProvider };","map":{"version":3,"sources":["/Users/dan/react-projects/expense-tracker/src/context/GlobalState.js"],"names":["React","createContext","useReducer","initialState","transactions","id","text","amount","GlobalContext","AppReducer","state","action","type","filter","transaction","payload","parseInt","GlobalContextProvider","children","dispatch","deleteTransaction","addTransaction","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,QAAiD,OAAjD;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,YAAY,EAAE,CACV;AAAEC,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE,QAAf;AAAyBC,IAAAA,MAAM,EAAE,CAAC;AAAlC,GADU,EAEV;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE,QAAf;AAAyBC,IAAAA,MAAM,EAAE;AAAjC,GAFU,EAGV;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE,MAAf;AAAuBC,IAAAA,MAAM,EAAE;AAA/B,GAHU,EAIV;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE,OAAf;AAAwBC,IAAAA,MAAM,EAAE,CAAC;AAAjC,GAJU;AADG,CAArB;AASA,MAAMC,aAAa,GAAGP,aAAa,CAACE,YAAD,CAAnC;;AAEA,MAAMM,UAAU,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAClC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAM,oBAAN;AACI,aAAO,EACH,GAAGF,KADA;AAEHN,QAAAA,YAAY,EAAEM,KAAK,CAACN,YAAN,CAAmBS,MAAnB,CAA2BC,WAAD,IAAiBA,WAAW,CAACT,EAAZ,KAAmBM,MAAM,CAACI,OAArE;AAFX,OAAP;;AAIJ,SAAM,iBAAN;AACI,aAAO,EACH,GAAGL,KADA;AAEHN,QAAAA,YAAY,EAAE,CACV,GAAGM,KAAK,CAACN,YADC,EAEV;AACIC,UAAAA,EAAE,EAAEK,KAAK,GAAG,CADhB;AAEIJ,UAAAA,IAAI,EAAEK,MAAM,CAACI,OAAP,CAAeT,IAFzB;AAGIC,UAAAA,MAAM,EAAES,QAAQ,CAACL,MAAM,CAACI,OAAP,CAAeR,MAAhB;AAHpB,SAFU;AAFX,OAAP;;AAWJ;AACI,aAAOG,KAAP;AAnBR;AAqBH,CAtBD;;AAwBA,MAAMO,qBAAqB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC5C,QAAM,CAACR,KAAD,EAAQS,QAAR,IAAoBjB,UAAU,CAACO,UAAD,EAAaN,YAAb,CAApC;;AAEA,QAAMiB,iBAAiB,GAAIf,EAAD,IAAQ;AAC9Bc,IAAAA,QAAQ,CAAC;AAAEP,MAAAA,IAAI,EAAE,oBAAR;AAA8BG,MAAAA,OAAO,EAAEV;AAAvC,KAAD,CAAR;AACH,GAFD;;AAGA,QAAMgB,cAAc,GAAG,CAACf,IAAD,EAAOC,MAAP,KAAkB;AACrCe,IAAAA,OAAO,CAACC,GAAR,CAAYjB,IAAZ,EAAkBC,MAAlB;AACAY,IAAAA,QAAQ,CAAC;AAAEP,MAAAA,IAAI,EAAE,iBAAR;AAA2BG,MAAAA,OAAO,EAAE;AAAET,QAAAA,IAAF;AAAQC,QAAAA;AAAR;AAApC,KAAD,CAAR;AACH,GAHD;;AAKA,sBACI,oBAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE;AAAEH,MAAAA,YAAY,EAAEM,KAAK,CAACN,YAAtB;AAAoCgB,MAAAA,iBAApC;AAAuDC,MAAAA;AAAvD,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyGH,QAAzG,CADJ;AAGH,CAdD;;AAgBA,SAASV,aAAT,EAAwBS,qBAAxB","sourcesContent":["import React, { createContext, useReducer } from \"react\";\n\nconst initialState = {\n    transactions: [\n        { id: 1, text: \"flower\", amount: -20 },\n        { id: 2, text: \"Salary\", amount: 210 },\n        { id: 3, text: \"food\", amount: 20 },\n        { id: 4, text: \"chair\", amount: -40 },\n    ],\n};\n\nconst GlobalContext = createContext(initialState);\n\nconst AppReducer = (state, action) => {\n    switch (action.type) {\n        case `DELETE_TRANSACTION`:\n            return {\n                ...state,\n                transactions: state.transactions.filter((transaction) => transaction.id !== action.payload),\n            };\n        case `ADD_TRANSACTION`:\n            return {\n                ...state,\n                transactions: [\n                    ...state.transactions,\n                    {\n                        id: state + 1,\n                        text: action.payload.text,\n                        amount: parseInt(action.payload.amount),\n                    },\n                ],\n            };\n        default:\n            return state;\n    }\n};\n\nconst GlobalContextProvider = ({ children }) => {\n    const [state, dispatch] = useReducer(AppReducer, initialState);\n\n    const deleteTransaction = (id) => {\n        dispatch({ type: \"DELETE_TRANSACTION\", payload: id });\n    };\n    const addTransaction = (text, amount) => {\n        console.log(text, amount);\n        dispatch({ type: \"ADD_TRANSACTION\", payload: { text, amount } });\n    };\n\n    return (\n        <GlobalContext.Provider value={{ transactions: state.transactions, deleteTransaction, addTransaction }}>{children}</GlobalContext.Provider>\n    );\n};\n\nexport { GlobalContext, GlobalContextProvider };\n"]},"metadata":{},"sourceType":"module"}